// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameFbSportsMatchRecommendPlay = "fb_sports_match_recommend_play"

// FbSportsMatchRecommendPlay 玩法推荐表
type FbSportsMatchRecommendPlay struct {
	ID          int64  `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true;comment:主键ID" json:"id,string"`     // 主键ID
	MatchID     int64  `gorm:"column:match_id;type:bigint;not null;comment:赛事ID（原 mid）" json:"matchId"`               // 赛事ID（原 mid）
	Options     string `gorm:"column:options;type:text;comment:选项集合（原 ops）" json:"options"`                           // 选项集合（原 ops）
	TeamInfo    string `gorm:"column:team_info;type:text;comment:球队信息，第一个是主队，第二个是客队（原 ts）" json:"teamInfo"`           // 球队信息，第一个是主队，第二个是客队（原 ts）
	StartTime   int64  `gorm:"column:start_time;type:bigint;not null;comment:赛事开赛时间（原 bt）" json:"startTime"`          // 赛事开赛时间（原 bt）
	MatchStatus int64  `gorm:"column:match_status;type:int;not null;comment:赛事进行状态（原 ms）" json:"matchStatus"`         // 赛事进行状态（原 ms）
	MarketType  int64  `gorm:"column:market_type;type:int;not null;comment:玩法类型，如亚盘、大小球等（原 mty）" json:"marketType"`   // 玩法类型，如亚盘、大小球等（原 mty）
	LeagueName  string `gorm:"column:league_name;type:varchar(255);not null;comment:联赛名称（原 lg_na）" json:"leagueName"` // 联赛名称（原 lg_na）
	LeagueID    int64  `gorm:"column:league_id;type:bigint;not null;comment:联赛ID（原 lg_id）" json:"leagueId"`           // 联赛ID（原 lg_id）
	CreatedAt   int64  `gorm:"column:created_at;comment:创建时间" json:"createdAt"`                                       // 创建时间
	UpdatedAt   int64  `gorm:"column:updated_at;comment:更新时间" json:"updatedAt"`                                       // 更新时间
}

// TableName FbSportsMatchRecommendPlay's table name
func (*FbSportsMatchRecommendPlay) TableName() string {
	return TableNameFbSportsMatchRecommendPlay
}
