// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameFbSportsMatchStatisticsMarketType = "fb_sports_match_statistics_market_type"

// FbSportsMatchStatisticsMarketType 盘口组合统计表，存储盘口组合下的赛事统计信息
type FbSportsMatchStatisticsMarketType struct {
	ID              int64  `gorm:"column:id;type:bigint;primaryKey;autoIncrement:true;comment:主键ID" json:"id,string"`                                  // 主键ID
	StatisticsID    int64  `gorm:"column:statistics_id;type:bigint;not null;comment:关联主表的 ID（对应主表 fb_sports_match_statistics.id）" json:"statisticsId"` // 关联主表的 ID（对应主表 fb_sports_match_statistics.id）
	MarketTypeID    string `gorm:"column:market_type_id;type:varchar(64);not null;comment:盘口组合 ID（对应 data.mts.id）" json:"marketTypeId"`                // 盘口组合 ID（对应 data.mts.id）
	SportID         int64  `gorm:"column:sport_id;type:int;not null;comment:运动种类 ID（对应 data.mts.sid）" json:"sportId"`                                  // 运动种类 ID（对应 data.mts.sid）
	GroupStatistics string `gorm:"column:group_statistics;type:text;comment:按赛事分组类型统计的赛事总数集合（对应 data.mts.tps，存储为 JSON）" json:"groupStatistics"`        // 按赛事分组类型统计的赛事总数集合（对应 data.mts.tps，存储为 JSON）
	CreatedAt       int64  `gorm:"column:created_at;comment:创建时间" json:"createdAt"`                                                                    // 记录创建时间（时间戳）
	UpdatedAt       int64  `gorm:"column:updated_at;comment:更新时间" json:"updatedAt"`                                                                    // 记录更新时间（时间戳）
}

// TableName FbSportsMatchStatisticsMarketType's table name
func (*FbSportsMatchStatisticsMarketType) TableName() string {
	return TableNameFbSportsMatchStatisticsMarketType
}
